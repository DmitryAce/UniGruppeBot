import sqlite3
from views import *
from markups import *

conn = sqlite3.connect('chat_users.db', check_same_thread=False)


def get_admins_and_moderators(chat_id):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞.
    """
    cursor = conn.cursor()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    cursor.execute('SELECT user_tag FROM users WHERE admin = 1 AND chat_id = ?', (chat_id,))
    q_admins = cursor.fetchall()
    admins = [f"@{admin_row[0]}" for admin_row in q_admins]

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
    cursor.execute('SELECT user_tag FROM users WHERE moderator = 1 AND chat_id = ?', (chat_id,))
    q_moderators = cursor.fetchall()
    moderators = [f"@{moderator_row[0]}" for moderator_row in q_moderators]

    cursor.close()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
    admin_list = "\n".join(admins) if admins else "–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."
    moderator_list = "\n".join(moderators) if moderators else "–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤."

    return admin_list, moderator_list






def add_chat(message):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —á–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç."""
    chat_id = message.chat.id
    chat_title = message.chat.title
    cursor = conn.cursor()

    cursor.execute("SELECT chat_id FROM chats WHERE chat_id = ?", (chat_id,))
    chat_exists = cursor.fetchone()

    if not chat_exists:
        cursor.execute(
            "INSERT INTO chats (chat_id, chat_title) VALUES (?, ?)",
            (chat_id, chat_title),
        )
        conn.commit()
    
    cursor.close()


def add_user(user_id, chat_id, user_name, is_admin, user_tag):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    cursor = conn.cursor()

    cursor.execute(
        "SELECT user_id FROM users WHERE user_id = ? AND chat_id = ?",
        (user_id, chat_id),
    )
    user_exists = cursor.fetchone()
    
    cursor.execute(
        "SELECT chat_title FROM chats WHERE chat_id = ?",
        (chat_id,),
    )
    chat = cursor.fetchone()
    group_name = chat[0]
    
    if not user_exists:
        cursor.execute(
            "INSERT INTO users (user_id, chat_id, user_name, admin, status, user_tag) VALUES (?, ?, ?, ?, ?, ?)",
            (user_id, chat_id, user_name, is_admin, "active", user_tag),
        )
        conn.commit()
        
        if is_admin:   
            reply = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {group_name}, {user_name}, —Ç–µ–ø–µ—Ä—å —Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
        else:
            reply = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {group_name}, {user_name}"
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ user_tag
        cursor.execute(
            "UPDATE users SET user_tag = ? WHERE user_id = ? AND chat_id = ?",
            (user_name, user_id, chat_id)
        )
        conn.commit()
        reply = f"{user_name} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
        
    cursor.close()
    return reply, group_name


def init_queue(message, thread_id=None):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—á–µ—Ä–µ–¥—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –∏–ª–∏ —Ç–æ–ø–∏–∫–∞."""
    chat_id = message.chat.id
    thread_id = message.message_thread_id if message.message_thread_id else thread_id
    cursor = conn.cursor()
    
    if chat_id > 0:
        return f"–ò –∫—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –±—É–¥–µ—Ç?"
    
    cursor.execute(
        'SELECT admin, moderator FROM users WHERE user_id = ? AND chat_id = ?', 
            (message.from_user.id, chat_id)
        )
    roles = cursor.fetchone()

    if roles is None or (roles[0] == 0 and roles[1] == 0):
        admin_list, moderator_list = get_admins_and_moderators(chat_id)

        cursor.close()
        conn.commit()
        return (
            "–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —Ç–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–ø—Ä–æ—Å–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.\n\n"
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:\n{admin_list}\n\n"
            f"–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:\n{moderator_list}"
        )
    if thread_id:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id = ?', (chat_id, thread_id))
    else:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id IS NULL', (chat_id,))

    existing_queue = cursor.fetchone()

    if existing_queue:
        cursor.close()
        return f"–û—á–µ—Ä–µ–¥—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. ID –æ—á–µ—Ä–µ–¥–∏: {existing_queue[0]}"

    cursor.execute('INSERT INTO queues (chat_id, thread_id) VALUES (?, ?)', (chat_id, thread_id))
    conn.commit()
    queue_id = cursor.lastrowid
    cursor.close()

    return f"–û—á–µ—Ä–µ–¥—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞. ID –æ—á–µ—Ä–µ–¥–∏: {queue_id}"


def kill_queue(message, thread_id=None):
    """–£–¥–∞–ª—è–µ—Ç –æ—á–µ—Ä–µ–¥—å –∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –∏–ª–∏ —Ç–æ–ø–∏–∫–∞."""
    chat_id = message.chat.id
    thread_id = message.message_thread_id if message.message_thread_id else thread_id
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    cursor.execute(
        'SELECT admin, moderator FROM users WHERE user_id = ? AND chat_id = ?', 
            (message.from_user.id, chat_id)
        )
    roles = cursor.fetchone()

    if roles is None or (roles[0] == 0 and roles[1] == 0):
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        admin_list, moderator_list = get_admins_and_moderators(chat_id)

        cursor.close()
        conn.commit()
        return (
            "–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —Ç–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–ø—Ä–æ—Å–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.\n\n"
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:\n{admin_list}\n\n"
            f"–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:\n{moderator_list}"
        )


    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –æ—á–µ—Ä–µ–¥–∏
    if thread_id:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id = ?', (chat_id, thread_id))
    else:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id IS NULL', (chat_id,))

    queue_result = cursor.fetchone()

    if not queue_result:
        cursor.close()
        return "–û—á–µ—Ä–µ–¥—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."

    queue_id = queue_result[0]

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –æ—á–µ—Ä–µ–¥–∏
    cursor.execute('DELETE FROM enqueued WHERE queue_id = ?', (queue_id,))
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–∞–º–æ–π –æ—á–µ—Ä–µ–¥–∏
    cursor.execute('DELETE FROM queues WHERE queue_id = ?', (queue_id,))
    
    conn.commit()
    cursor.close()

    return "–û—á–µ—Ä–µ–¥—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞."


def get_queue(message, thread_id=None, user_id=None):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –æ—á–µ—Ä–µ–¥–∏"""
    chat_id = message.chat.id
    cursor = conn.cursor()

    if thread_id:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id = ?', (chat_id, thread_id))
    else:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id IS NULL', (chat_id,))

    existing_queue = cursor.fetchone()

    if not existing_queue:
        admin_list, moderator_list = get_admins_and_moderators(chat_id)
        cursor.close()
        conn.commit()
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        return (
            "–û—á–µ—Ä–µ–¥–∏ –µ—â–µ –Ω–µ—Ç, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å–æ–∑–¥–∞—Ç—å –æ—á–µ—Ä–µ–¥—å.\n\n"
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:\n{admin_list}\n\n"
            f"–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:\n{moderator_list}"
        )

    queue_id = existing_queue[0]
        
    cursor.execute('''SELECT DISTINCT u.user_name, e.position, u.user_id, u.user_tag
                    FROM enqueued e 
                    JOIN users u ON e.user_id = u.user_id 
                    WHERE e.queue_id = ? 
                    ORDER BY e.position''', (queue_id,))

    enqueued_users = cursor.fetchall()

    if not enqueued_users:
        cursor.close()
        conn.commit()
        return "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞."

    max_name_length = max(len(user_name) for user_name, _, _, _ in enqueued_users)
    name_column_width = max(max_name_length + 2, 20)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    queue_output = "–û—á–µ—Ä–µ–¥—å:\n"
    queue_output += f"{'‚Ññ':<3} | {'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':<{name_column_width}}\n"
    queue_output += "-" * (3 + 3 + name_column_width) + "\n"

    if chat_id == -1001641522876:
        # –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–≤–æ–¥–∞ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã —Å emojis
        for i, (user_name, position, current_user_id, user_tag) in enumerate(enqueued_users, start=1):
            truncated_name = user_name[:15] + "..." if len(user_name) > 15 else user_name
            if position == 1:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–≤—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏
                if current_user_id == 811311997:
                    queue_output += f"<b>{position:<3} | üëë@{user_tag:<{name_column_width}}</b>\n"
                else:
                    queue_output += f"<b>{position:<3} | @{user_tag:<{name_column_width}}</b>\n"
                continue
            if current_user_id == 811311997:
                queue_output += f"<b>{position:<3} | üëë{user_name:<{name_column_width}}</b>\n"
                continue
            elif current_user_id == 2035497506:
                queue_output += f"<b>{position:<3} | üÖ∞Ô∏èüÖ±Ô∏èüÖæÔ∏èüÖ±Ô∏èüÖ∞Ô∏è</b>\n"
                continue
            if current_user_id == user_id:
                queue_output += f"<b>{position:<3} | {truncated_name:<{name_column_width}}</b>\n"
            else:
                queue_output += f"{position:<3} | {truncated_name:<{name_column_width}}\n"
    else:
        for i, (user_name, position, current_user_id, user_tag) in enumerate(enqueued_users, start=1):
            truncated_name = user_name[:15] + "..." if len(user_name) > 15 else user_name
            if position == 1:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–≤—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏
                if current_user_id == 811311997:
                    queue_output += f"<b>{position:<3} | üëë@{user_tag:<{name_column_width}}</b>\n"
                else:
                    queue_output += f"<b>{position:<3} | @{user_tag:<{name_column_width}}</b>\n"
                continue
            if current_user_id == 811311997:
                queue_output += f"<b>{position:<3} | üëë{user_name:<{name_column_width}}</b>\n"
                continue
            if current_user_id == user_id:
                queue_output += f"<b>{position:<3} | {truncated_name:<{name_column_width}}</b>\n"
            else:
                queue_output += f"{position:<3} | {truncated_name:<{name_column_width}}\n"



    conn.commit()
    cursor.close()

    return queue_output


def swap_positions(message, thread_id=None, user_id=None, pos1=None, pos2=None):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏, –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
    chat_id = message.chat.id
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute(
        'SELECT admin, moderator FROM users WHERE user_id = ? AND chat_id = ?', 
            (message.from_user.id, chat_id)
        )
    roles = cursor.fetchone()

    if roles is None or (roles[0] == 0 and roles[1] == 0):
        conn.commit()
        cursor.close()
        return "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å –ø–æ–∑–∏—Ü–∏–∏."

    if not pos1 or not pos2:
        return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–≤–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –æ–±–º–µ–Ω–∞."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–∑–∏—Ü–∏–∏ —è–≤–ª—è—é—Ç—Å—è —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏
    try:
        pos1 = int(pos1)
        pos2 = int(pos2)
    except ValueError:
        return "–ü–æ–∑–∏—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏."

    if pos1 == pos2:
        return "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏."

    # –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ pos1 –≤—Å–µ–≥–¥–∞ –º–µ–Ω—å—à–µ pos2
    if pos1 > pos2:
        pos1, pos2 = pos2, pos1

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π queue_id
    if thread_id:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id = ?', (chat_id, thread_id))
    else:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id IS NULL', (chat_id,))
    
    existing_queue = cursor.fetchone()

    if not existing_queue:
        cursor.close()
        return "–û—á–µ—Ä–µ–¥–∏ –Ω–µ—Ç."

    queue_id = existing_queue[0]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute('''SELECT u.user_name, e.position, e.user_id 
                      FROM enqueued e 
                      JOIN users u ON e.user_id = u.user_id 
                      WHERE e.queue_id = ? AND e.position IN (?, ?) 
                      ORDER BY e.position''', (queue_id, pos1, pos2))
    users_at_positions = cursor.fetchall()

    if len(users_at_positions) == 2:
        # –ü–æ–∑–∏—Ü–∏–∏ –∑–∞–Ω—è—Ç—ã, –º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏
        user1, position1, user1_id = users_at_positions[0]
        user2, position2, user2_id = users_at_positions[1]
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('UPDATE enqueued SET position = ? WHERE queue_id = ? AND user_id = ?', (pos2, queue_id, user1_id))
        cursor.execute('UPDATE enqueued SET position = ? WHERE queue_id = ? AND user_id = ?', (pos1, queue_id, user2_id))
        conn.commit()

        response = f"–ü–æ–∑–∏—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {user1} –∏ {user2} –±—ã–ª–∏ –æ–±–º–µ–Ω–µ–Ω—ã."
    elif len(users_at_positions) == 1:
        # –û–¥–Ω–∞ –∏–∑ –ø–æ–∑–∏—Ü–∏–π –ø—É—Å—Ç–∞, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–≤–æ–±–æ–¥–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
        user, position, user_id = users_at_positions[0]
        target_position = pos1 if position != pos1 else pos2
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
        cursor.execute('UPDATE enqueued SET position = ? WHERE queue_id = ? AND user_id = ?', (target_position, queue_id, user_id))
        conn.commit()

        response = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–µ—Ä–µ–º–µ—â—ë–Ω –Ω–∞ –ø–æ–∑–∏—Ü–∏—é {target_position}."
    else:
        response = "–ù–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."

    cursor.close()
    return response


def pop_position(message, thread_id=None, user_id=None, pos=None):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.
       –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∏–∂–µ –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è –Ω–∞ 1 –ø–æ–∑–∏—Ü–∏—é –≤—ã—à–µ."""
    chat_id = message.chat.id
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute(
        'SELECT admin, moderator FROM users WHERE user_id = ? AND chat_id = ?', 
            (message.from_user.id, chat_id)
        )
    roles = cursor.fetchone()

    if roles is None or (roles[0] == 0 and roles[1] == 0):
        conn.commit()
        cursor.close()
        return "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –æ—á–µ—Ä–µ–¥–∏."

    if not pos:
        return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–∑–∏—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º
    try:
        pos = int(pos)
    except ValueError:
        return "–ü–æ–∑–∏—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º."

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π queue_id
    if thread_id:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id = ?', (chat_id, thread_id))
    else:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id IS NULL', (chat_id,))
    
    existing_queue = cursor.fetchone()

    if not existing_queue:
        cursor.close()
        return "–û—á–µ—Ä–µ–¥–∏ –Ω–µ—Ç."

    queue_id = existing_queue[0]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute('''SELECT u.user_name, e.position, e.user_id 
                      FROM enqueued e 
                      JOIN users u ON e.user_id = u.user_id 
                      WHERE e.queue_id = ? AND e.position = ?''', (queue_id, pos))
    user_at_position = cursor.fetchone()

    if user_at_position:
        user, position, user_id = user_at_position
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        cursor.execute('DELETE FROM enqueued WHERE queue_id = ? AND user_id = ? AND position = ?', (queue_id, user_id, pos))
        conn.commit()

        # –ü–æ–¥–Ω–∏–º–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∏–∂–µ –Ω–∞ 1 –ø–æ–∑–∏—Ü–∏—é –≤—ã—à–µ
        cursor.execute('''UPDATE enqueued 
                          SET position = position - 1 
                          WHERE queue_id = ? AND position > ?''', (queue_id, pos))
        conn.commit()

        response = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –±—ã–ª —É–¥–∞–ª—ë–Ω —Å –ø–æ–∑–∏—Ü–∏–∏ {pos}. –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∏–∂–µ –ø–æ–¥–Ω—è—Ç—ã –Ω–∞ 1 –ø–æ–∑–∏—Ü–∏—é."
    else:
        response = "–ù–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."

    cursor.close()
    return response


def insert_position(message, thread_id=None, user_id=None, current_pos=None, new_pos=None):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞ –≤ –æ—á–µ—Ä–µ–¥–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏–∏"""
    chat_id = message.chat.id
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute(
        'SELECT admin, moderator FROM users WHERE user_id = ? AND chat_id = ?', 
            (message.from_user.id, chat_id)
        )
    roles = cursor.fetchone()

    if roles is None or (roles[0] == 0 and roles[1] == 0):
        conn.commit()
        cursor.close()
        return "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –ø–æ–∑–∏—Ü–∏–∏."

    if not current_pos or not new_pos:
        return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –∏ –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–∑–∏—Ü–∏–∏ —è–≤–ª—è—é—Ç—Å—è —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏
    try:
        current_pos = int(current_pos)
        new_pos = int(new_pos)
    except ValueError:
        return "–ü–æ–∑–∏—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏."

    if current_pos == new_pos:
        return "–ü–æ–∑–∏—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–µ–π."

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π queue_id
    if thread_id:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id = ?', (chat_id, thread_id))
    else:
        cursor.execute('SELECT queue_id FROM queues WHERE chat_id = ? AND thread_id IS NULL', (chat_id,))
    
    existing_queue = cursor.fetchone()

    if not existing_queue:
        cursor.close()
        return "–û—á–µ—Ä–µ–¥–∏ –Ω–µ—Ç."

    queue_id = existing_queue[0]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —á–µ–ª–æ–≤–µ–∫ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
    cursor.execute('''SELECT user_id, position FROM enqueued 
                      WHERE queue_id = ? AND position = ?''', (queue_id, current_pos))
    user_to_move = cursor.fetchone()

    if not user_to_move:
        cursor.close()
        return f"–ù–∞ –ø–æ–∑–∏—Ü–∏–∏ {current_pos} –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."

    user_id_to_move, position = user_to_move

    # –°–¥–≤–∏–≥–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
    if current_pos < new_pos:
        # –°–¥–≤–∏–≥–∞–µ–º –≤–≤–µ—Ä—Ö
        cursor.execute('''UPDATE enqueued
                          SET position = position - 1
                          WHERE queue_id = ? AND position > ? AND position <= ?''',
                       (queue_id, current_pos, new_pos))
    else:
        # –°–¥–≤–∏–≥–∞–µ–º –≤–Ω–∏–∑
        cursor.execute('''UPDATE enqueued
                          SET position = position + 1
                          WHERE queue_id = ? AND position >= ? AND position < ?''',
                       (queue_id, new_pos, current_pos))

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–º–µ—â–∞–µ–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute('UPDATE enqueued SET position = ? WHERE queue_id = ? AND user_id = ?',
                   (new_pos, queue_id, user_id_to_move))
    conn.commit()

    cursor.close()
    return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {current_pos} –±—ã–ª –ø–µ—Ä–µ–º–µ—â—ë–Ω –Ω–∞ –ø–æ–∑–∏—Ü–∏—é {new_pos}."


def toggle_moderator_status(message, conn, chat_id, user_tag):
    cursor = conn.cursor()
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    cursor.execute('SELECT admin FROM users WHERE user_id = ? AND chat_id = ?', (message.from_user.id, chat_id))
    admin_check = cursor.fetchone()
    
    if not admin_check or not admin_check[0]:
        cursor.close()
        return "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤."
    
    cursor.execute('''
        SELECT user_id, moderator FROM users
        WHERE chat_id = ? AND user_tag = ?
    ''', (chat_id, user_tag))
    user_data = cursor.fetchone()

    if not user_data:
        return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_tag} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞–ª –≤ –æ—á–µ—Ä–µ–¥—è—Ö, –ø—É—Å—Ç—å @{user_tag} –ø—Ä–æ–ø–∏—à–µ—Ç /registerme"

    user_id, current_status = user_data
    new_status = not current_status  # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('''
        UPDATE users SET moderator = ? WHERE user_id = ? AND chat_id = ?
    ''', (new_status, user_id, chat_id))
    conn.commit()

    status_message = "–¢–µ–ø–µ—Ä—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä!" if new_status else "–ë–æ–ª—å—à–µ –Ω–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä!"
    return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_tag}: {status_message}"


def shutdown():
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö."""
    conn.close()
